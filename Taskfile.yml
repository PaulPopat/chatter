version: "3"

dotenv: [".env"]

env:
  SSO_BASE_URL: http://localhost:3000/
  SERVER_BASE_URL: http://localhost:3002/
  UI_URL: http://localhost:3001
  SERVER_PASSWORD: i-love-my-wife
  SERVER_ADMIN_PASSWORD: i-really-love-my-wife
  ENCRYPTION_PASSPHRASE: test123

tasks:
  integration:prepare:
    cmds:
      - rm -rf resources/data/database
      - rm -rf resources/server-data/database
    dir: "{{.TASKFILE_DIR}}"

  integration:test:
    cmds:
      - task: integration:prepare
      - npx jest
    dir: "{{.TASKFILE_DIR}}/tests"

  integration:watch:
    cmds:
      - task: integration:prepare
      - npx jest --watch
    dir: "{{.TASKFILE_DIR}}/tests"

  solution:build:
    cmds:
      - dotnet build
    dir: "{{.TASKFILE_DIR}}/src"

  solution:publish:
    cmds:
      - dotnet publish
    dir: "{{.TASKFILE_DIR}}/src"

  solution:test:
    cmds:
      - task: solution:build
      - dotnet test Effuse.sln
    dir: "{{.TASKFILE_DIR}}/src"

  solution:clean:
    cmds:
      - find . -iname "bin" -print0 | xargs -0 rm -rf
      - find . -iname "TestResults" -print0 | xargs -0 rm -rf

  core:aws:dependencies:
    cmds:
      - dotnet tool install -g Amazon.Lambda.Tools

  solution:key:generate:
    cmds:
      - openssl req -new -newkey rsa:4096 -nodes -keyout signing_key.key -out public_key.csr -subj "/C=UK/CN=local"
      - openssl x509 -req -sha512 -days 365 -in public_key.csr -signkey signing_key.key -out private_key.pem
    dir: "{{.TASKFILE_DIR}}/resources/{{.DATA_DIR}}"
    internal: true

  sso:aws:package:
    cmds:
      - dotnet lambda package
    dir: "{{.TASKFILE_DIR}}/src/Effuse.SSO.AWS.Handlers"

  sso:aws:deploy:
    deps: [solution:build]
    cmds:
      - task: solution:key:generate
        vars: { DATA_DIR: "data" }
      - task: sso:aws:package
      - cdk --app "{{.CDK_APP}}" bootstrap
      - cdk --app "{{.CDK_APP}}" deploy --require-approval never
    vars:
      CDK_APP: dotnet run --project src/Effuse.SSO.AWS.Infrastructure/Effuse.SSO.AWS.Infrastructure.csproj
      APP_PREFIX: single-signon

  sso:local:run:
    cmds:
      - task: solution:key:generate
        vars: { DATA_DIR: "data" }
      - ./src/Effuse.SSO.Local/bin/Debug/net8.0/Effuse.SSO.Local
    env:
      APP_PREFIX: single-signon
      DATA_DIR: ./resources/data

  server:local:run:
    cmds:
      - task: solution:key:generate
        vars: { DATA_DIR: "server-data" }
      - ./src/Effuse.Server.Local/bin/Debug/net8.0/Effuse.Server.Local
    env:
      APP_PREFIX: effuse-server
      DATA_DIR: ./resources/server-data

  all:local:run:
    deps: [sso:local:run, server:local:run]

  pipeline:run:
    cmds:
      - task: integration:prepare
      - task: solution:build
      - task all:local:run > resources/app.log &
      - while ! nc -z localhost 3000; do sleep 1; done
      - while ! nc -z localhost 3002; do sleep 1; done
      - task: integration:test

  ui:watch:
    dir: "{{.TASKFILE_DIR}}/user-interface"
    cmds:
      - npx webpack serve
  ui:build:
    dir: "{{.TASKFILE_DIR}}/user-interface"
    cmds:
      - npx webpack
    env:
      PROD: "true"
